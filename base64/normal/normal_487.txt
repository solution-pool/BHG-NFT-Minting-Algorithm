data:text/html;base64,<canvas id="canvas"></canvas><script>const SIZE=400,CO=7,RYTHM=8,INDEX=487,RS=400,NMAX=1e5,ONE=1/RS,STP=ONE,NEARL=.0075,FARL=.075,INIT_RAD=.0175,INIT_NUM=9,MID=.5,TWOPI=2*Math.PI;let FRONT=[[0,255,108],[255,108,0],[108,0,255]],BACK=[255,255,255];!function(t,s,i,e,n,h,r,o,c){function a(t){var s,i=t.length,n=this,h=0,r=n.i=n.j=0,o=n.S=[];for(i||(t=[i++]);e>h;)o[h]=h++;for(h=0;e>h;h++)o[h]=o[r=m&r+t[h%i]+(s=o[h])],o[r]=s;(n.g=function(t){for(var s,i=0,h=n.i,r=n.j,o=n.S;t--;)s=o[h=m&h+1],i=i*e+o[m&(o[h]=o[r=m&r+s])+(o[r]=s)];return n.i=h,n.j=r,i})(e)}function u(t,s){for(var i,e=t+"",n=0;n<e.length;)s[m&n]=m&(i^=19*s[m&n])+e.charCodeAt(n++);return f(s)}function l(i){try{return p?f(p.randomBytes(e)):(t.crypto.getRandomValues(i=new Uint8Array(e)),f(i))}catch(e){return[+new Date,t,(i=t.navigator)&&i.plugins,t.screen,f(s)]}}function f(t){return String.fromCharCode.apply(0,t)}var p,_=i.pow(e,6),V=i.pow(2,52),g=2*V,m=e-1,S=i["seed"+c]=function(t,n,h){var r=[],o=u(function t(s,i){var e,n=[],h=typeof s;if(i&&"object"==h)for(e in s)try{n.push(t(s[e],i-1))}catch(t){}return n.length?n:"string"==h?s:s+"\0"}((n=1==n?{entropy:!0}:n||{}).entropy?[t,f(s)]:null==t?l():t,3),r),p=new a(r);return u(f(p.S),s),(n.pass||h||function(t,s,e){return e?(i[c]=t,s):t})(function(){for(var t=p.g(6),s=_,i=0;V>t;)t=(t+i)*e,s*=e,i=p.g(1);for(;t>=g;)t/=2,s/=2,i>>>=1;return(t+i)/s},o,"global"in n?n.global:this==i)};if(u(i[c](),s),r&&r.exports){r.exports=S;try{p=require("crypto")}catch(t){}}else o&&o.amd&&o(function(){return S})}(this,[],Math,256,0,0,"object"==typeof module&&module,"function"==typeof define&&define,"random");class Zonemap{constructor(t){t=parseInt(t);this.VZ=[],this.Z=[],this.vnum=0,this.vsize=RS,this.nz=t,this.tz=t*t,this.gzs=RS;for(let t=0;t<this.tz;t++){let s=[];s.i=t,s.size=RS,s.count=0,s.ZV=[],this.Z[t]=s}}_ac(t,s){this.X=t,this.Y=s}_ad(t){t=parseInt(t);let s=this.vnum;const i=this.X[t],e=this.Y[t],n=this._ai(i,e);this._af(n,s),this.VZ[s]=n;const h=[];return this.vnum>=this.vsize-1&&(this.VZ=h,this.vsize=2*this.vsize),this.vnum+=1,s}_ae(t){return t=parseInt(t),this._ah(this.VZ[t],t),this.VZ[t]=-1,1}_af(t,s){t=parseInt(t),s=parseInt(s);let i=this.Z[t];return null==i&&((i=[]).count=0,i.ZV=[],i.i=0,i.size=SIZE,this.Z.push(i)),i.ZV[i.count]=s,i.count+=1,i.count>=i.size-1?this._ag(i):1}_ag(t){let s=2*t.size;return t.ZV=[],t.size=s,s>this.gzs&&(this.gzs=s),this.Z.push(t),1}_ah(t,s){t=parseInt(t),s=parseInt(s);let i=this.Z[t];for(let t=0;t<i.count;t++)if(i.ZV[t]==s)return i.ZV[t]=i.ZV[i.count-1],i.count-=1,1;return-1}_ai(t,s){const i=this.nz;return i*parseInt(t*i)+parseInt(s*i)}_aj(t){t=parseInt(t);const s=this.X[t],i=this.Y[t],e=parseInt(this._ai(s,i)),n=parseInt(this.VZ[t]);return n<0?-1:e!=n?(this._ah(n,t),this._af(e,t),this.VZ[t]=e,1):-1}_ak(t,s,i,e){const n=this.nz,h=parseInt(t*n),r=parseInt(s*n);let o=0;const c=i*i;for(let i=Math.max(h-1,0);i<Math.min(h+2,n);i++)for(let h=Math.max(r-1,0);h<Math.min(r+2,n);h++){const r=this.Z[i*n+h];for(let i=0;i<r.count;i++){const n=t-this.X[r.ZV[i]],h=s-this.Y[r.ZV[i]];n*n+h*h<c&&(e[o]=r.ZV[i],o+=1)}}return o}}class Segments{constructor(t,s){this.X=[],_e(this.X,t,0),this.Y=[],_e(this.Y,t,0),this.VA=[],_e(this.VA,t,0),this.VS=[],_e(this.VS,t,-1),this.EV=[],_e(this.EV,2*t,-1),this.VE=[],_e(this.VE,2*t,-1),this.nmax=t,this.vnum=0,this.edgeNumber=0,this.snum=0,this.zonewidth=s,this.nz=1/s,this.nz<3&&(this.nz=1,this.zonewidth=1),this.zonemap=new Zonemap(this.nz),this.zonemap._ac(this.X,this.Y)}_m(t,s){return t<0||t>1||s<0||s>1?-1:1}_n(t,s,i,e){if(this._m(t,s)<0)throw new Error("Vertext outside unit square.");const n=this.vnum;return this.X[n]=t,this.Y[n]=s,this.VA[n]=1,this.VS[n]=i,this.zonemap._ad(n),this.vnum=n+1,n}_o(t,s){return t<0||t>this.vnum-1||this.VA[t]<0?-1:s<0||s>this.vnum-1||this.VA[s]<0?-1:1}_p(t,s){t=parseInt(t),s=parseInt(s);const i=this.edgeNumber;if(this._o(t,s)<0)throw new Error("invalid vertex in _p v1, v2, "+t+","+s);return this.EV[2*i]=t,this.EV[2*i+1]=s,_f(t,i,this.VE),_f(s,i,this.VE),this.edgeNumber+=1,i}_q(t){return this.EV[2*t]>-1&&this.EV[2*t+1]>-1?1:-1}_r(t){return this.VA[t]=-1,this.zonemap._ae(t),1}_s(t){if(t<0||t>this.edgeNumber-1)throw new Error("invalid edge in _s e1"+t);let s=this.EV[2*t],i=this.EV[2*t+1];return this.EV[2*t]=-1,this.EV[2*t+1]=-1,s>-1&&_g(s,t,this.VE),i>-1&&_g(i,t,this.VE),1}_t(t){let s=this.edgeNumber,i=0;for(let e=0;e<s;e++)if(this.EV[2*e]>-1){let s=this.EV[2*e],n=this.EV[2*e+1];t[i][0]=this.X[s],t[i][1]=this.Y[s],t[i][2]=this.X[n],t[i][3]=this.Y[n],i+=1}return i}_v(t){let s=this.X[this.EV[2*t]]-this.X[this.EV[2*t+1]],i=this.Y[this.EV[2*t]]-this.Y[this.EV[2*t+1]];return Math.sqrt(s*s+i*i)}_x(t,s,i,e){let n=[],h=this.snum,r=e.length;for(let o=0;o<r;o++){const r=e[o],c=t+Math.cos(r)*i,a=s+Math.sin(r)*i;n.push(this._n(c,a,h,1))}for(let t=0;t<n.length-1;t++)this._p(n[t],n[t+1]);this._p(n[0],n[r-1]),this.snum=h+1}_y(t,s=-1){if(this._q(t)<0)throw new Error("e1 does not exist");if(t<0)throw new Error("invalid edge in _y e1"+t);let i=this.EV[2*t],e=this.EV[2*t+1],n=this.VS[i];if(n<0)throw new Error("Invalid segment id.");if(s>0){let n=this.X[i]-this.X[e],h=this.Y[i]-this.Y[e];if(n*n+h*h<s*s)throw new Error("edge too short, e1,"+t)}let h=.5*(this.X[i]+this.X[e]),r=.5*(this.Y[i]+this.Y[e]),o=this._n(h,r,n,1);return this._s(t),this._p(i,o),this._p(e,o),1}_aa(t){let s=this.vnum;for(let i=0;i<s;i++){if(this.X[i]<(RS-CS)/2/RS+t||this.X[i]>1-(RS-CS)/2/RS-t)return-1;if(this.Y[i]<(RS-CS)/2/RS+t||this.Y[i]>1-(RS-CS)/2/RS-t)return-1}return 1}_ab(){return this.edgeNumber}}class DifferentialLine extends Segments{constructor(t,s,i,e){super(t,s),this.SX=[],this.SY=[],this.SD=[],this.nearl=i,this.farl=e}_a(t){let s=[];const i=this.vnum;for(let e=0;e<i;e++){this.SX[e]=0,this.SY[e]=0;let i=this.zonemap._ak(this.X[e],this.Y[e],this.farl,s);this._b(e,s,i,t,this.SX,this.SY)}for(let t=0;t<i;t++)this.VA[t]<0||(this.X[t]=this.X[t]+this.SX[t],this.Y[t]=this.Y[t]+this.SY[t]);for(let t=0;t<i;t++)if(!(this.VA[t]<0))try{this.zonemap._aj(t)}catch{}}_b(t,s,i,e,n,h){if(this.VA[t]<1)return-1;let r,o,c=this.VE[2*t],a=this.VE[2*t+1];r=this.EV[2*c]==t?this.EV[2*c+1]:this.EV[2*c],o=this.EV[2*a]==t?this.EV[2*a+1]:this.EV[2*a];let u=0,l=0;for(let n=0;n<i;n++){let i=s[n],h=this.X[t]-this.X[i],c=this.Y[t]-this.Y[i],a=Math.sqrt(h*h+c*c);if(i==r||i==o){if(a<this.nearl||a<=0)continue;u+=-h/a*e,l+=-c/a*e}else{if(a>this.farl||a<=0)continue;u+=h*(this.farl/a-1)*e,l+=c*(this.farl/a-1)*e}}return n[t]+=u,h[t]+=l,1}}function _h(){ctx.fillStyle="rgb("+BACK.toString()+")",ctx.fillRect(0,0,RS,RS)}function _i(t,s,i,e,n,h=2,r=!1){let o=t-i,c=s-e,a=Math.sqrt(o**2+c**2),u=parseInt(a/ONE);u<h&&(u=h);let l=Math.atan2(c,o),f=_j(0,a,u);for(let i=0;i<f.length;i++){let e=t-f[i]*Math.cos(l),h=s-f[i]*Math.sin(l);ctx.beginPath(),ctx.strokeStyle=r&&(!gf||pe)?"rgb("+BACK.toString()+")":"rgb("+cf.toString()+")",ctx.arc(e*RS,h*RS,n*RS,0,TWOPI),ctx.stroke()}}function _j(t,s,i,e=!0){const n=(s-t)/(e?i-1:i);return Array.from({length:i},(s,i)=>t+n*i)}function _e(t,s,i){for(let e=0;e<s;e++)t[e]=i;return t}function _f(t,s,i){i[2*t]<0?i[2*t]=s:i[2*t+1]=s}function _g(t,s,i){return i[2*t]==s?(i[2*t]=i[2*t+1],i[2*t+1]=-1):i[2*t+1]==s&&(i[2*t+1]=-1),i}function _c(t,s,e){const n=t._ab();let h=[],r=[];for(let t=0;t<n;t++)h.push(Math.random());const o=h.length;for(i=0;i<o;i++)h[i]>e||!h[i]||r.push(i);let c=r.length;for(let i=0;i<c;i++){if(!(t._v(r[i])<s))try{t._y(r[i])}catch(t){continue}}}let nc,nvc,gf,DF,coloroptions,cf,sl,ctx,ai,CS,sc=1,dp=[],pp=[],pn=parseInt(SIZE/30),ps=!1,pe=!1,pf=!1,ccs=[],ci=0,co=1,fcs=[];function mcs(){let t=FRONT[0],s=FRONT[1],i=FRONT[2];if(t[0]>s[0])for(let i=t[0];i>=s[0];i--)ccs.push([i,t[1],t[2]]);else for(let i=t[0];i<=s[0];i++)ccs.push([i,t[1],t[2]]);if(t[1]>s[1])for(let i=t[1];i>=s[1];i--)ccs.push([s[0],i,t[2]]);else for(let i=t[1];i<=s[1];i++)ccs.push([s[0],i,t[2]]);if(t[2]>s[2])for(let i=t[2];i>=s[2];i--)ccs.push([s[0],s[1],i]);else for(let i=t[2];i<=s[2];i++)ccs.push([s[0],s[1],i]);if(s[0]>i[0])for(let t=s[0];t>=i[0];t--)ccs.push([t,s[1],s[2]]);else for(let t=s[0];t<=i[0];t++)ccs.push([t,s[1],s[2]]);if(s[1]>i[1])for(let t=s[1];t>=i[1];t--)ccs.push([i[0],t,s[2]]);else for(let t=s[1];t<=i[1];t++)ccs.push([i[0],t,s[2]]);if(s[2]>i[2])for(let t=s[2];t>=i[2];t--)ccs.push([i[0],i[1],t]);else for(let t=s[2];t<=i[2];t++)ccs.push([i[0],i[1],t])}function setup(){mcs();let t=document.getElementById("canvas");t.width=SIZE,t.height=SIZE,ctx=t.getContext("2d"),sc=1,RYTHM>2?(CS=RS,step_unit=parseInt(RS/(RYTHM-1)),sl=parseInt(RS/(RYTHM-1))):sl=step_unit=CS=RS,gf=!0,ci=0,Math.seedrandom(INDEX),cf=CO>4&&CO<9?FRONT[0]:FRONT,DF=new DifferentialLine(NMAX,2*FARL,NEARL,FARL);let s=[];for(let t=0;t<INIT_NUM;t++)s.push(Math.random()*TWOPI);s.sort(),DF._x(MID,MID,INIT_RAD,s),draw()}function draw(){cf=ccs[ci],ci>=ccs.length-1&&(co=2),ci<=0&&(co=1),1==co?ci++:ci--,wrap(),ai=requestAnimationFrame(draw)}function wrap(){nc=[];for(let t=0;t<NMAX;t++)nc[t]=[0,0,0,0];let t=steps(DF),s=DF._t(nc),i=nc.slice(0,s);if(ps)i=pp.shift(),pp.length>=pn*sc?(pe=!0,pf=!1):(pe=!1,pf=!0);else if(gf?dp.push(i):i=dp.pop(),null==i)return void setup();_h();for(let t=0;t<i.length;t++){let s=i[t];_i(s[0],s[1],s[2],s[3],ONE/3)}return t}function steps(t){if(ps)0==pp.length&&(ps=!1,sc<RYTHM-1?sc++:sc=1,sl=step_unit*sc);else if(gf&&(t._a(STP),_c(t,NEARL,.5)),check_step(sl,t))if(sc<RYTHM-1){ps=!0;let t=dp.length;for(let s=1;s<=pn*sc;s++)pp.push(dp[t-s]);for(let s=pn*sc;s>0;s--)pp.push(dp[t-s])}else 1==RYTHM&&cancelAnimationFrame(ai),gf&&(cancelAnimationFrame(ai),sleep(1e3*parseInt(RYTHM+1)),ai=requestAnimationFrame(draw)),gf=!1}function check_step(t,s){CS=t;let i=s._aa(3*STP)<0;return CS=RS,i}function sleep(t){const s=Date.now();let i=null;do{i=Date.now()}while(i-s<t)}setup();</script>