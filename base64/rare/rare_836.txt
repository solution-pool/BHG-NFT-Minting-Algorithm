data:text/html;base64,<canvas id="canvas"></canvas><script>const SIZE=700,CO=9,RYTHM=8,INDEX=836,RS=700,NMAX=1e4,ONE=1/RS,STP=ONE,NEARL=6*ONE,FARL=60*ONE,INIT_RAD=5*ONE,INIT_NUM=3,MID=.5,TWOPI=2*Math.PI;let FRONT=[0,255,216],BACK=[0,0,0];class Zonemap{constructor(t){t=parseInt(t);this.VZ=[],this.Z=[],this.vnum=0,this.vsize=RS,this.nz=t,this.tz=t*t,this.gzs=RS;for(let t=0;t<this.tz;t++){let s=[];s.i=t,s.size=RS,s.count=0,s.ZV=[],this.Z[t]=s}}_ac(t,s){this.X=t,this.Y=s}_ad(t){t=parseInt(t);let s=this.vnum;const i=this.X[t],e=this.Y[t],n=this._ai(i,e);this._af(n,s),this.VZ[s]=n;const r=[];return this.vnum>=this.vsize-1&&(this.VZ=r,this.vsize=2*this.vsize),this.vnum+=1,s}_ae(t){return t=parseInt(t),this._ah(this.VZ[t],t),this.VZ[t]=-1,1}_af(t,s){t=parseInt(t),s=parseInt(s);let i=this.Z[t];return null==i&&((i=[]).count=0,i.ZV=[],i.i=0,i.size=SIZE,this.Z.push(i)),i.ZV[i.count]=s,i.count+=1,i.count>=i.size-1?this._ag(i):1}_ag(t){let s=2*t.size;return t.ZV=[],t.size=s,s>this.gzs&&(this.gzs=s),this.Z.push(t),1}_ah(t,s){t=parseInt(t),s=parseInt(s);let i=this.Z[t];for(let t=0;t<i.count;t++)if(i.ZV[t]==s)return i.ZV[t]=i.ZV[i.count-1],i.count-=1,1;return-1}_ai(t,s){const i=this.nz;return i*parseInt(t*i)+parseInt(s*i)}_aj(t){t=parseInt(t);const s=this.X[t],i=this.Y[t],e=parseInt(this._ai(s,i)),n=parseInt(this.VZ[t]);return n<0?-1:e!=n?(this._ah(n,t),this._af(e,t),this.VZ[t]=e,1):-1}_ak(t,s,i,e){const n=this.nz,r=parseInt(t*n),h=parseInt(s*n);let o=0;const c=i*i;for(let i=Math.max(r-1,0);i<Math.min(r+2,n);i++)for(let r=Math.max(h-1,0);r<Math.min(h+2,n);r++){const h=this.Z[i*n+r];for(let i=0;i<h.count;i++){const n=t-this.X[h.ZV[i]],r=s-this.Y[h.ZV[i]];n*n+r*r<c&&(e[o]=h.ZV[i],o+=1)}}return o}}class Segments{constructor(t,s){this.X=[],_e(this.X,t,0),this.Y=[],_e(this.Y,t,0),this.VA=[],_e(this.VA,t,0),this.VS=[],_e(this.VS,t,-1),this.EV=[],_e(this.EV,2*t,-1),this.VE=[],_e(this.VE,2*t,-1),this.nmax=t,this.vnum=0,this.edgeNumber=0,this.snum=0,this.zonewidth=s,this.nz=1/s,this.nz<3&&(this.nz=1,this.zonewidth=1),this.zonemap=new Zonemap(this.nz),this.zonemap._ac(this.X,this.Y)}_m(t,s){return t<0||t>1||s<0||s>1?-1:1}_n(t,s,i,e){if(this._m(t,s)<0)throw new Error("1");const n=this.vnum;return this.X[n]=t,this.Y[n]=s,this.VA[n]=1,this.VS[n]=i,this.zonemap._ad(n),this.vnum=n+1,n}_o(t,s){return t<0||t>this.vnum-1||this.VA[t]<0?-1:s<0||s>this.vnum-1||this.VA[s]<0?-1:1}_p(t,s){t=parseInt(t),s=parseInt(s);const i=this.edgeNumber;if(this._o(t,s)<0)throw new Error("2");return this.EV[2*i]=t,this.EV[2*i+1]=s,_f(t,i,this.VE),_f(s,i,this.VE),this.edgeNumber+=1,i}_q(t){return this.EV[2*t]>-1&&this.EV[2*t+1]>-1?1:-1}_r(t){return this.VA[t]=-1,this.zonemap._ae(t),1}_s(t){if(t<0||t>this.edgeNumber-1)throw new Error("3");let s=this.EV[2*t],i=this.EV[2*t+1];return this.EV[2*t]=-1,this.EV[2*t+1]=-1,s>-1&&_g(s,t,this.VE),i>-1&&_g(i,t,this.VE),1}_u(t){let s=this.vnum,i=0;for(let e=0;e<s;e++)this.VA[e]>-1&&(t[i][0]=this.X[e],t[i][1]=this.Y[e],i+=1);return i}_v(t){let s=this.X[this.EV[2*t]]-this.X[this.EV[2*t+1]],i=this.Y[this.EV[2*t]]-this.Y[this.EV[2*t+1]];return Math.sqrt(s*s+i*i)}_x(t,s,i,e){let n=[],r=this.snum,h=e.length;for(let o=0;o<h;o++){const h=e[o],c=t+Math.cos(h)*i,a=s+Math.sin(h)*i;n.push(this._n(c,a,r,1))}for(let t=0;t<n.length-1;t++)this._p(n[t],n[t+1]);this._p(n[0],n[h-1]),this.snum=r+1}_y(t,s=-1){if(this._q(t)<0)throw new Error("4");if(t<0)throw new Error("5");let i=this.EV[2*t],e=this.EV[2*t+1],n=this.VS[i];if(n<0)throw new Error("6");if(s>0){let t=this.X[i]-this.X[e],n=this.Y[i]-this.Y[e];if(t*t+n*n<s*s)throw new Error("7")}let r=.5*(this.X[i]+this.X[e]),h=.5*(this.Y[i]+this.Y[e]),o=this._n(r,h,n,1);return this._s(t),this._p(i,o),this._p(e,o),1}_aa(t){let s=this.vnum;for(let i=0;i<s;i++){if(this.X[i]<(RS-CS)/2/RS+t||this.X[i]>1-(RS-CS)/2/RS-t)return-1;if(this.Y[i]<(RS-CS)/2/RS+t||this.Y[i]>1-(RS-CS)/2/RS-t)return-1}return 1}_ab(){return this.edgeNumber}}class DifferentialLine extends Segments{constructor(t,s,i,e){super(t,s),this.SX=[],this.SY=[],this.SD=[],this.nearl=i,this.farl=e}_a(t){let s=[];const i=this.vnum;for(let e=0;e<i;e++){this.SX[e]=0,this.SY[e]=0;let i=this.zonemap._ak(this.X[e],this.Y[e],this.farl,s);this._b(e,s,i,t,this.SX,this.SY)}for(let t=0;t<i;t++)this.VA[t]<0||(this.X[t]=this.X[t]+this.SX[t],this.Y[t]=this.Y[t]+this.SY[t]);for(let t=0;t<i;t++)if(!(this.VA[t]<0))try{this.zonemap._aj(t)}catch{}}_b(t,s,i,e,n,r){if(this.VA[t]<1)return-1;let h,o,c=this.VE[2*t],a=this.VE[2*t+1];h=this.EV[2*c]==t?this.EV[2*c+1]:this.EV[2*c],o=this.EV[2*a]==t?this.EV[2*a+1]:this.EV[2*a];let u=0,f=0;for(let n=0;n<i;n++){let i=s[n],r=this.X[t]-this.X[i],c=this.Y[t]-this.Y[i],a=Math.sqrt(r*r+c*c);if(i==h||i==o){if(a<this.nearl||a<=0)continue;u+=-r/a*e,f+=-c/a*e}else{if(a>this.farl||a<=0)continue;u+=r*(this.farl/a-1)*e,f+=c*(this.farl/a-1)*e}}return n[t]+=u,r[t]+=f,1}}function _c(t,s,e){const n=t._ab();let r=[],h=[];for(let t=0;t<n;t++)r.push(Math.random());const o=r.length;for(i=0;i<o;i++)r[i]>e||!r[i]||h.push(i);let c=h.length;for(let i=0;i<c;i++){if(!(t._v(h[i])<s))try{t._y(h[i])}catch(t){continue}}}function _e(t,s,i){for(let e=0;e<s;e++)t[e]=i;return t}function _f(t,s,i){i[2*t]<0?i[2*t]=s:i[2*t+1]=s}function _g(t,s,i){return i[2*t]==s?(i[2*t]=i[2*t+1],i[2*t+1]=-1):i[2*t+1]==s&&(i[2*t+1]=-1),i}function _h(){ctx.fillStyle="rgb("+BACK.toString()+")",ctx.fillRect(0,0,RS,RS)}function _k(t){let s=t.length;for(let i=0;i<s;i++){let s=t[i],e=s[0],n=s[1];!gf||pe?ctx.strokeStyle="rgb("+BACK.toString()+")":CO<5?ctx.strokeStyle="rgb("+FRONT.toString()+")":ctx.strokeStyle="rgb("+cf.toString()+")",ctx.strokeRect(e*RS,n*RS,ONE*RS,ONE*RS)}}let nc,nvc,gf,DF,cf;!function(t,s,i,e,n,r,h,o,c){function a(t){var s,i=t.length,n=this,r=0,h=n.i=n.j=0,o=n.S=[];for(i||(t=[i++]);e>r;)o[r]=r++;for(r=0;e>r;r++)o[r]=o[h=V&h+t[r%i]+(s=o[r])],o[h]=s;(n.g=function(t){for(var s,i=0,r=n.i,h=n.j,o=n.S;t--;)s=o[r=V&r+1],i=i*e+o[V&(o[r]=o[h=V&h+s])+(o[h]=s)];return n.i=r,n.j=h,i})(e)}function u(t,s){for(var i,e=t+"",n=0;n<e.length;)s[V&n]=V&(i^=19*s[V&n])+e.charCodeAt(n++);return l(s)}function f(i){try{return p?l(p.randomBytes(e)):(t.crypto.getRandomValues(i=new Uint8Array(e)),l(i))}catch(e){return[+new Date,t,(i=t.navigator)&&i.plugins,t.screen,l(s)]}}function l(t){return String.fromCharCode.apply(0,t)}var p,_=i.pow(e,6),S=i.pow(2,52),m=2*S,V=e-1,g=i["seed"+c]=function(t,n,r){var h=[],o=u(function t(s,i){var e,n=[],r=typeof s;if(i&&"object"==r)for(e in s)try{n.push(t(s[e],i-1))}catch(t){}return n.length?n:"string"==r?s:s+"\0"}((n=1==n?{entropy:!0}:n||{}).entropy?[t,l(s)]:null==t?f():t,3),h),p=new a(h);return u(l(p.S),s),(n.pass||r||function(t,s,e){return e?(i[c]=t,s):t})(function(){for(var t=p.g(6),s=_,i=0;S>t;)t=(t+i)*e,s*=e,i=p.g(1);for(;t>=m;)t/=2,s/=2,i>>>=1;return(t+i)/s},o,"global"in n?n.global:this==i)};if(u(i[c](),s),h&&h.exports){h.exports=g;try{p=require("crypto")}catch(t){}}else o&&o.amd&&o(function(){return g})}(this,[],Math,256,0,0,"object"==typeof module&&module,"function"==typeof define&&define,"random");let sl,ai,ctx,CS,sc=1,dp=[],pp=[],pn=parseInt(SIZE/RYTHM),ps=!1,pe=!1,pf=!1,ccs=[],ci=0,co=1,fcs=[];function preload(){mfcs(),mcs()}function mfcs(){for(let t=0;t<256;t++)fcs.push([255,0,t]);for(let t=255;t>=0;t--)fcs.push([t,0,255]);for(let t=0;t<256;t++)fcs.push([0,t,255]);for(let t=255;t>=0;t--)fcs.push([0,255,t]);for(let t=0;t<256;t++)fcs.push([t,255,0]);for(let t=255;t>=0;t--)fcs.push([255,t,0])}function mcs(){let t=fcs.length;for(let s=0;s<t;s++)if(fcs[s].join(",")===FRONT.join(",")){ci=s;break}}function setup(){let t=document.getElementById("canvas");t.width=SIZE,t.height=SIZE,ctx=t.getContext("2d"),sc=1,RYTHM>2?(CS=RS,step_unit=parseInt(RS/(RYTHM-1)),sl=parseInt(RS/(RYTHM-1))):sl=step_unit=CS=RS,gf=!0,Math.seedrandom(INDEX+1),cf=FRONT,DF=new DifferentialLine(NMAX,2*FARL,NEARL,FARL);let s=[];for(let t=0;t<INIT_NUM;t++)s.push(Math.random()*TWOPI);DF._x(MID,MID,INIT_RAD,s),_h(),draw()}function draw(){cf=fcs[ci],ci>=fcs.length-1&&(co=2),ci<=0&&(co=1),1==co?ci++:ci--,wrap(),SIZE<800?setTimeout(function(){ai=requestAnimationFrame(draw)},1e3/(10+parseInt((SIZE-400)/10))):ai=requestAnimationFrame(draw)}function wrap(){nvc=[];for(let t=0;t<NMAX;t++)nvc[t]=[0,0,0,0];let t=steps(DF),s=DF._u(nvc),i=nvc.slice(0,s);if(ps)i=pp.shift(),pp.length>=pn*sc?(pe=!0,pf=!1):(pe=!1,pf=!0);else if(gf?dp.push(i):i=dp.pop(),null==i)return void setup();return _k(i),t}function steps(t){if(ps)0==pp.length&&(ps=!1,sc<RYTHM-1?sc++:sc=1,sl=step_unit*sc);else if(gf&&(t._a(STP),_c(t,NEARL,.03)),check_step(sl,t))if(sc<RYTHM-1){ps=!0;let t=dp.length;for(let s=1;s<=pn*sc;s++)pp.push(dp[t-s]);for(let s=pn*sc;s>0;s--)pp.push(dp[t-s])}else 1==RYTHM&&cancelAnimationFrame(ai),gf&&(cancelAnimationFrame(ai),sleep(1e3*parseInt(RYTHM+1)),SIZE<800?setTimeout(function(){ai=requestAnimationFrame(draw)},1e3/(10+parseInt((SIZE-400)/10))):ai=requestAnimationFrame(draw)),gf=!1}function check_step(t,s){CS=t;let i=s._aa(3*STP)<0;return CS=RS,i}function sleep(t){const s=Date.now();let i=null;do{i=Date.now()}while(i-s<t)}preload(),setup();</script>